import Foundation

//enum boostState придуман заново, так как в прошлом задании не было подходящего для класса sportcar
enum boostState{
    case on, off
}

enum trunkState{
    case full, empty
}
class Car {
    var brand: String
    var boost: boostState
    var trunk: trunkState
    
    init(brand: String, boost: boostState, trunk: trunkState) {
        self.brand = brand
        self.boost = boost
        self.trunk = trunk
    }
    
    func boostOn() {
        boost = .on
        print("Boost on")
    }
    func boostOff(){
        boost = .off
    }
}

class SportCar: Car{
    var maxSpeed: Int
    init(maxSpeed: Int, brand: String, boost: boostState, trunk: trunkState) {
        self.maxSpeed = maxSpeed
        super.init(brand: brand,  boost: boost, trunk: trunk)
        
    }
}

class Truck: Car{
var heigtCabin: Int
    
init(heigtCabin: Int, brand: String, boost: boostState, trunk: trunkState){
self.heigtCabin = heigtCabin
        super.init(brand: brand,  boost: boost, trunk: trunk)
}
}
var car1 = SportCar(maxSpeed: 300, brand: "Audi", boost: .on, trunk: .empty)
print(car1.brand)
print(car1.boost)
print(car1.maxSpeed)
print(car1.trunk)

var truk1 = Truck(heigtCabin: 280, brand: "volvo", boost: .off, trunk: .full)

print(truk1.brand)
print(truk1.boost)
print(truk1.trunk)
print(truk1.heigtCabin)
